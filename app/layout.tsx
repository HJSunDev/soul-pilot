import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import { ConvexClientProvider } from "@/components/providers/convex-provider";
import { ResponsiveProvider } from "@/components/providers/responsive-provider";
import { AuthGuardProvider } from "@/components/providers/auth-guard-provider";
import { Toaster } from "@/components/ui/toaster"

// import { RemSizeDisplay } from "./components/rem-size-display";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        suppressHydrationWarning
      >
        {/* 实时显示根元素字体大小 */}
        {/* <RemSizeDisplay /> */}

        <ConvexClientProvider>
          <AuthGuardProvider>
            {children}
          </AuthGuardProvider>
        </ConvexClientProvider>
        <Toaster />
      </body>
    </html> 
  );
}
